/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package grafico;

import java.awt.BorderLayout;
import java.awt.Dimension;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author hele
 */
public class tela extends javax.swing.JFrame {
    String pais;
    String ano;


    /**
     * Creates new form tela
     */
    public tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jButton1.setText("Carregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        jComboBox1.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brazil", "Argentina", "Uruguai", "Chile", "Todos" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1980", "1990", "2000", "2010", "2020" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 3, 18)); // NOI18N
        jLabel1.setText("Censo dos Países da América do Sul");

        jLabel2.setText("    ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jComboBox1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pais = jComboBox1.getSelectedItem().toString();//adicionei pais e ano
        ano = jComboBox2.getSelectedItem().toString();
        jLabel2.setText(pais+ ", "+ ano);
            DefaultCategoryDataset dado = new DefaultCategoryDataset();
        

        
        if (pais.equals("Brazil")) {
            
            if (ano.equals("1980")) {
                dado.setValue(2.4, "Crescimento Populacional", "1980");
                dado.setValue(2.3, "Crescimento Populacional", "1981");
                dado.setValue(2.3, "Crescimento Populacional", "1982");
                dado.setValue(2.2, "Crescimento Populacional", "1983");
                dado.setValue(2.2, "Crescimento Populacional", "1984");
                dado.setValue(2.1, "Crescimento Populacional", "1985");
                dado.setValue(2.1, "Crescimento Populacional", "1986");
                dado.setValue(2.0, "Crescimento Populacional", "1987");
                dado.setValue(1.9, "Crescimento Populacional", "1988");
                dado.setValue(1.9, "Crescimento Populacional", "1989");
            }
            if (ano.equals("1990")) {

                dado.setValue(1.8, "Crescimento Populacional", "1990");
                dado.setValue(1.7, "Crescimento Populacional", "1991");
                dado.setValue(1.7, "Crescimento Populacional", "1992");
                dado.setValue(1.6, "Crescimento Populacional", "1993");                
                dado.setValue(1.6, "Crescimento Populacional", "1994");
                dado.setValue(1.6, "Crescimento Populacional", "1995");
                dado.setValue(1.5, "Crescimento Populacional", "1996");
                dado.setValue(1.5, "Crescimento Populacional", "1997");
                dado.setValue(1.5, "Crescimento Populacional", "1998");
                dado.setValue(1.4, "Crescimento Populacional", "1999");   
            }   
            if (ano.equals("2000")) {
                dado.setValue(1.4, "Crescimento Populacional", "2000");
                dado.setValue(1.4, "Crescimento Populacional", "2001");
                dado.setValue(1.3, "Crescimento Populacional", "2002");
                dado.setValue(1.2, "Crescimento Populacional", "2003");
                dado.setValue(1.1, "Crescimento Populacional", "2004");
                dado.setValue(1.1, "Crescimento Populacional", "2005");
                dado.setValue(1.1, "Crescimento Populacional", "2006");
                dado.setValue(1.0, "Crescimento Populacional", "2007");
                dado.setValue(1.0, "Crescimento Populacional", "2008");
                dado.setValue(1.0, "Crescimento Populacional", "2009");
            }
            if (ano.equals("2010")) {
              dado.setValue(0.9, "Crescimento Populacional", "2010");
              dado.setValue(0.9, "Crescimento Populacional", "2011");
              dado.setValue(0.9, "Crescimento Populacional", "2012");
              dado.setValue(0.9, "Crescimento Populacional", "2013");
              dado.setValue(0.9, "Crescimento Populacional", "2014");
              dado.setValue(0.8, "Crescimento Populacional", "2015");
              dado.setValue(0.8, "Crescimento Populacional", "2016");
              dado.setValue(0.8, "Crescimento Populacional", "2017");
              dado.setValue(0.8, "Crescimento Populacional", "2018");
              dado.setValue(0.8, "Crescimento Populacional", "2019");
            }
            if (ano.equals("2020")) {
                dado.setValue(0.7, "Crescimento Populacional", "2020");
                dado.setValue(0.5, "Crescimento Populacional", "2021");
                dado.setValue(0.5, "Crescimento Populacional", "2022");
                dado.setValue(0.5, "Crescimento Populacional", "2023");
                dado.setValue(0.4, "Crescimento Populacional", "2024");
                dado.setValue(0.4, "Crescimento Populacional", "2025");
                dado.setValue(0.4, "Crescimento Populacional", "2026");
                dado.setValue(0.4, "Crescimento Populacional", "2027");
                dado.setValue(0.3, "Crescimento Populacional", "2028");
                dado.setValue(0.3, "Crescimento Populacional", "2029");
            }
         JFreeChart grafico_baras = ChartFactory.createBarChart3D("Cresc. Populacional", pais, 
                "% ao ano", dado, PlotOrientation.VERTICAL, true,true, false);
         
        ChartPanel panel = new ChartPanel(grafico_baras);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension (602, 303));
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(panel, BorderLayout.NORTH);
       pack();
        panel.repaint();
        }
        
         if (pais.equals("Argentina")) {
            
            if (ano.equals("1980")) {
                dado.setValue(1.6, "Crescimento Populacional", "1980");
                dado.setValue(1.6, "Crescimento Populacional", "1981");
                dado.setValue(1.6, "Crescimento Populacional", "1982");
                dado.setValue(1.6, "Crescimento Populacional", "1983");
                dado.setValue(1.5, "Crescimento Populacional", "1984");
                dado.setValue(1.5, "Crescimento Populacional", "1985");
                dado.setValue(1.5, "Crescimento Populacional", "1986");
                dado.setValue(1.5, "Crescimento Populacional", "1987");
                dado.setValue(1.5, "Crescimento Populacional", "1988");
                dado.setValue(1.5, "Crescimento Populacional", "1989");
            }
            if (ano.equals("1990")) {

                dado.setValue(1.5, "Crescimento Populacional", "1990");
                dado.setValue(1.4, "Crescimento Populacional", "1991");
                dado.setValue(1.4, "Crescimento Populacional", "1992");
                dado.setValue(1.4, "Crescimento Populacional", "1993");                
                dado.setValue(1.3, "Crescimento Populacional", "1994");
                dado.setValue(1.3, "Crescimento Populacional", "1995");
                dado.setValue(1.3, "Crescimento Populacional", "1996");
                dado.setValue(1.3, "Crescimento Populacional", "1997");
                dado.setValue(1.2, "Crescimento Populacional", "1998");
                dado.setValue(1.2, "Crescimento Populacional", "1999");   
            }   
            if (ano.equals("2000")) {
                dado.setValue(1.1, "Crescimento Populacional", "2000");
                dado.setValue(1.1, "Crescimento Populacional", "2001");
                dado.setValue(1.1, "Crescimento Populacional", "2002");
                dado.setValue(1.0, "Crescimento Populacional", "2003");
                dado.setValue(1.0, "Crescimento Populacional", "2004");
                dado.setValue(1.0, "Crescimento Populacional", "2005");
                dado.setValue(1.0, "Crescimento Populacional", "2006");
                dado.setValue(1.0, "Crescimento Populacional", "2007");
                dado.setValue(1.0, "Crescimento Populacional", "2008");
                dado.setValue(1.0, "Crescimento Populacional", "2009");
            }
            if (ano.equals("2010")) {
              dado.setValue(0.3, "Crescimento Populacional", "2010");
              dado.setValue(1.2, "Crescimento Populacional", "2011");
              dado.setValue(1.1, "Crescimento Populacional", "2012");
              dado.setValue(1.1, "Crescimento Populacional", "2013");
              dado.setValue(1.1, "Crescimento Populacional", "2014");
              dado.setValue(1.1, "Crescimento Populacional", "2015");
              dado.setValue(1.1, "Crescimento Populacional", "2016");
              dado.setValue(1.0, "Crescimento Populacional", "2017");
              dado.setValue(1.0, "Crescimento Populacional", "2018");
              dado.setValue(1.0, "Crescimento Populacional", "2019");
            }
            if (ano.equals("2020")) {
              dado.setValue(0.3, "Crescimento Populacional", "2010");
              dado.setValue(1.2, "Crescimento Populacional", "2011");
              dado.setValue(1.1, "Crescimento Populacional", "2012");
              dado.setValue(1.1, "Crescimento Populacional", "2013");
              dado.setValue(1.1, "Crescimento Populacional", "2014");
              dado.setValue(1.1, "Crescimento Populacional", "2015");
              dado.setValue(1.1, "Crescimento Populacional", "2016");
              dado.setValue(1.0, "Crescimento Populacional", "2017");
              dado.setValue(1.0, "Crescimento Populacional", "2018");
              dado.setValue(1.0, "Crescimento Populacional", "2019");
            }
         JFreeChart grafico_baras = ChartFactory.createBarChart3D("Cresc. Populacional", pais, 
                "% ao ano", dado, PlotOrientation.VERTICAL, true,true, false);
         
        ChartPanel panel = new ChartPanel(grafico_baras);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension (602, 303));
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(panel, BorderLayout.NORTH);
        pack();
        panel.repaint();
        }

         
          if (pais.equals("Uruguai")) {
            
            if (ano.equals("1980")) {
                dado.setValue(0.4, "Crescimento Populacional", "1980");
                dado.setValue(0.4, "Crescimento Populacional", "1981");
                dado.setValue(0.4, "Crescimento Populacional", "1982");
                dado.setValue(0.4, "Crescimento Populacional", "1983");
                dado.setValue(0.4, "Crescimento Populacional", "1984");
                dado.setValue(0.5, "Crescimento Populacional", "1985");
                dado.setValue(0.5, "Crescimento Populacional", "1986");
                dado.setValue(0.5, "Crescimento Populacional", "1987");
                dado.setValue(0.6, "Crescimento Populacional", "1988");
                dado.setValue(0.7, "Crescimento Populacional", "1989");
            }
            if (ano.equals("1990")) {

                dado.setValue(0.6, "Crescimento Populacional", "1990");
                dado.setValue(0.4, "Crescimento Populacional", "1991");
                dado.setValue(0.4, "Crescimento Populacional", "1992");
                dado.setValue(0.4, "Crescimento Populacional", "1993");                
                dado.setValue(0.3, "Crescimento Populacional", "1994");
                dado.setValue(0.3, "Crescimento Populacional", "1995");
                dado.setValue(0.3, "Crescimento Populacional", "1996");
                dado.setValue(0.3, "Crescimento Populacional", "1997");
                dado.setValue(0.5, "Crescimento Populacional", "1998");
                dado.setValue(0.4, "Crescimento Populacional", "1999");   
            }   
            if (ano.equals("2000")) {
                dado.setValue(1.1, "Crescimento Populacional", "2000");
                dado.setValue(1.1, "Crescimento Populacional", "2001");
                dado.setValue(1.1, "Crescimento Populacional", "2002");
                dado.setValue(1.0, "Crescimento Populacional", "2003");
                dado.setValue(1.5, "Crescimento Populacional", "2004");
                dado.setValue(1.0, "Crescimento Populacional", "2005");
                dado.setValue(1.0, "Crescimento Populacional", "2006");
                dado.setValue(1.0, "Crescimento Populacional", "2007");
                dado.setValue(1.0, "Crescimento Populacional", "2008");
                dado.setValue(1.0, "Crescimento Populacional", "2009");
            }
            if (ano.equals("2010")) {
                
              dado.setValue(0.3, "Crescimento Populacional", "2010");
              dado.setValue(1.2, "Crescimento Populacional", "2011");
              dado.setValue(1.1, "Crescimento Populacional", "2012");
              dado.setValue(1.1, "Crescimento Populacional", "2013");
              dado.setValue(1.1, "Crescimento Populacional", "2014");
              dado.setValue(1.1, "Crescimento Populacional", "2015");
              dado.setValue(1.1, "Crescimento Populacional", "2016");
              dado.setValue(1.0, "Crescimento Populacional", "2017");
              dado.setValue(1.0, "Crescimento Populacional", "2018");
              dado.setValue(1.0, "Crescimento Populacional", "2019");
            }
            if (ano.equals("2020")) {
                dado.setValue(0.9, "Crescimento Populacional", "2020");
                dado.setValue(0.5, "Crescimento Populacional", "2021");
                dado.setValue(0.9, "Crescimento Populacional", "2022");
                dado.setValue(0.6, "Crescimento Populacional", "2023");
                dado.setValue(0.8, "Crescimento Populacional", "2024");
                dado.setValue(0.2, "Crescimento Populacional", "2025");
                dado.setValue(0.9, "Crescimento Populacional", "2026");
                dado.setValue(01.4, "Crescimento Populacional", "2027");
                dado.setValue( 01.2, "Crescimento Populacional", "2028");
                dado.setValue( 0.1, "Crescimento Populacional", "2029");
            }
         JFreeChart grafico_baras = ChartFactory.createBarChart3D("Cresc. Populacional", pais, 
                "% ao ano", dado, PlotOrientation.VERTICAL, true,true, false);
         
        ChartPanel panel = new ChartPanel(grafico_baras);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension (602, 303));
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(panel, BorderLayout.NORTH);
        pack();
        panel.repaint();
        }       

          if (pais.equals("Chile")) {
            
            if (ano.equals("1980")) {
                dado.setValue(1.6, "Crescimento Populacional", "1980");
                dado.setValue(1.6, "Crescimento Populacional", "1981");
                dado.setValue(1.6, "Crescimento Populacional", "1982");
                dado.setValue(1.16, "Crescimento Populacional", "1983");
                dado.setValue(1.2, "Crescimento Populacional", "1984");
                dado.setValue(1.5, "Crescimento Populacional", "1985");
                dado.setValue(1.8, "Crescimento Populacional", "1986");
                dado.setValue(1.5, "Crescimento Populacional", "1987");
                dado.setValue(1.9, "Crescimento Populacional", "1988");
                dado.setValue(1.1, "Crescimento Populacional", "1989");
            }
            if (ano.equals("1990")) {

                dado.setValue(1.5, "Crescimento Populacional", "1990");
                dado.setValue(1.6, "Crescimento Populacional", "1991");
                dado.setValue(1.4, "Crescimento Populacional", "1992");
                dado.setValue(1.4, "Crescimento Populacional", "1993");                
                dado.setValue(1.3, "Crescimento Populacional", "1994");
                dado.setValue(1.3, "Crescimento Populacional", "1995");
                dado.setValue(1.4, "Crescimento Populacional", "1996");
                dado.setValue(1.3, "Crescimento Populacional", "1997");
                dado.setValue(1.2, "Crescimento Populacional", "1998");
                dado.setValue(1.2, "Crescimento Populacional", "1999");   
            }   
            if (ano.equals("2000")) {
                dado.setValue(1.1, "Crescimento Populacional", "2000");
                dado.setValue(1.1, "Crescimento Populacional", "2001");
                dado.setValue(1.2, "Crescimento Populacional", "2002");
                dado.setValue(1.0, "Crescimento Populacional", "2003");
                dado.setValue(1.0, "Crescimento Populacional", "2004");
                dado.setValue(1.0, "Crescimento Populacional", "2005");
                dado.setValue(1.3, "Crescimento Populacional", "2006");
                dado.setValue(1.0, "Crescimento Populacional", "2007");
                dado.setValue(1.0, "Crescimento Populacional", "2008");
                dado.setValue(1.0, "Crescimento Populacional", "2009");
            }
            if (ano.equals("2010")) {
              dado.setValue(0.3, "Crescimento Populacional", "2010");
              dado.setValue(1.2, "Crescimento Populacional", "2011");
              dado.setValue(1.1, "Crescimento Populacional", "2012");
              dado.setValue(1.1, "Crescimento Populacional", "2013");
              dado.setValue(1.1, "Crescimento Populacional", "2014");
              dado.setValue(1.1, "Crescimento Populacional", "2015");
              dado.setValue(1.1, "Crescimento Populacional", "2016");
              dado.setValue(1.0, "Crescimento Populacional", "2017");
              dado.setValue(1.0, "Crescimento Populacional", "2018");
              dado.setValue(1.0, "Crescimento Populacional", "2019");
            }
            if (ano.equals("2020")) {
                dado.setValue(0.9, "Crescimento Populacional", "2020");
                dado.setValue(1.9, "Crescimento Populacional", "2021");
                dado.setValue(1.9, "Crescimento Populacional", "2022");
                dado.setValue(2.8, "Crescimento Populacional", "2023");
                dado.setValue(0.8, "Crescimento Populacional", "2024");
                dado.setValue(1.8, "Crescimento Populacional", "2025");
                dado.setValue(2.9, "Crescimento Populacional", "2026");
                dado.setValue(2.7, "Crescimento Populacional", "2027");
                dado.setValue(1.9, "Crescimento Populacional", "2028");
                dado.setValue(1.97, "Crescimento Populacional", "2029");
            }
         JFreeChart grafico_baras = ChartFactory.createBarChart3D("Cresc. Populacional", pais, 
                "% ao ano", dado, PlotOrientation.VERTICAL, true,true, false);
         
        ChartPanel panel = new ChartPanel(grafico_baras);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension (602, 303));
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(panel, BorderLayout.NORTH);
        pack();
        panel.repaint();
        }
          
        if (pais.equals("Todos")) {
            DefaultPieDataset datos = new DefaultPieDataset();
            if (ano.equals("1980")) {
                datos.setValue("Bolívia", 2.2);
                datos.setValue("Brasil", 2.4);
                datos.setValue("Chile", 1.5);
                datos.setValue("Argentina", 1.6);
                datos.setValue("Colômbia", 2.3);
                datos.setValue("Costa Rica", 2.7);
                datos.setValue("Cuba", 0.4);
                datos.setValue("Equador", 2.7);
                datos.setValue("El Salvador", 1.7);
                datos.setValue("Guatemala", 2.5);
                datos.setValue("Haiti", 2.0);
                datos.setValue("Honduras", 3.1);        
                datos.setValue("PAÍS DO CHECO PERÉZ", 2.6);
                datos.setValue("Nicarágua", 2.7);
                datos.setValue("Panamá", 2.3);
                datos.setValue("Paraguai", 2.6);
                datos.setValue("Peru", 2.5);
                datos.setValue("República Dominicana", 2.3);
                datos.setValue("Uruguai", 0.4);
                datos.setValue("venezuela", 2.8);
            }
            if (ano.equals("1990")) {
                 datos.setValue("Bolívia", 2.5);
                datos.setValue("Brasil", 2.43);
                datos.setValue("Chile", 1.59);
                datos.setValue("Argentina", 2.6);
                datos.setValue("Colômbia", 2.3);
                datos.setValue("Costa Rica", 2.4);
                datos.setValue("Cuba", 1.4);
                datos.setValue("Equador", 2.5);
                datos.setValue("El Salvador", 2.7);
                datos.setValue("Guatemala", 2.7);
                datos.setValue("Haiti", 2.8);
                datos.setValue("Honduras", 3.4);        
                datos.setValue("PAÍS DO CHECO PERÉZ", 2.3);
                datos.setValue("Nicarágua", 2.5);
                datos.setValue("Panamá", 2.8);
                datos.setValue("Paraguai", 2.4);
                datos.setValue("Peru", 2.5);
                datos.setValue("República Dominicana", 2.3);
                datos.setValue("Uruguai", 0.4);
                datos.setValue("venezuela", 2.8); 
                
            }
            if (ano.equals("2000")) {
               
                  datos.setValue("Bolívia", 2.6);
                datos.setValue("Brasil", 2.2);
                datos.setValue("Chile", 1.9);
                datos.setValue("Argentina", 2.2);
                datos.setValue("Colômbia", 2.0);
                datos.setValue("Costa Rica", 4.4);
                datos.setValue("Cuba", 1.4);
                datos.setValue("Equador", 2.5);
                datos.setValue("El Salvador", 2.7);
                datos.setValue("Guatemala", 2.8);
                datos.setValue("Haiti", 1.8);
                datos.setValue("Honduras", 3.4);        
                datos.setValue("PAÍS DO CHECO PERÉZ", 2.3);
                datos.setValue("Nicarágua", 2.5);
                datos.setValue("Panamá", 2.8);
                datos.setValue("Paraguai", 2.4);
                datos.setValue("Peru", 3.5);
                datos.setValue("República Dominicana", 2.3);
                datos.setValue("Uruguai", 0.3);
                datos.setValue("venezuela", 2.8); 
                
            }
            
            if (ano.equals("2010")) {
                 datos.setValue("Honduras", 3.4);        
                datos.setValue("PAÍS DO CHECO PERÉZ", 2.3);
                datos.setValue("Nicarágua", 2.5);
                datos.setValue("Panamá", 2.8);
                datos.setValue("Paraguai", 2.4);
                datos.setValue("Peru", 3.5);
                datos.setValue("República Dominicana", 2.3);
                datos.setValue("Uruguai", 0.3);
                datos.setValue("venezuela", 2.8); 
                datos.setValue("Bolívia", 2.2);
                datos.setValue("Brasil", 2.4);
                datos.setValue("Chile", 1.5);
                datos.setValue("Argentina", 1.6);
                datos.setValue("Colômbia", 2.3);
                datos.setValue("Costa Rica", 2.7);
                datos.setValue("Cuba", 0.4);
                datos.setValue("Equador", 2.7);
                datos.setValue("El Salvador", 1.7);
                datos.setValue("Guatemala", 2.5);
                datos.setValue("Haiti", 2.0);
            }
            
            if (ano.equals("2020")) {
         datos.setValue("Cuba", 1.4);
                datos.setValue("Equador", 2.5);
                datos.setValue("El Salvador", 2.7);
                datos.setValue("Guatemala", 2.8);
                
                  datos.setValue("Bolívia", 2.5);
                datos.setValue("Brasil", 2.43);
                datos.setValue("Chile", 1.59);
                datos.setValue("Argentina", 2.6);
                datos.setValue("Colômbia", 2.3);
                datos.setValue("Costa Rica", 2.4);
                
                 datos.setValue("Haiti", 2.0);
                datos.setValue("Honduras", 3.1);        
                datos.setValue("PAÍS DO CHECO PERÉZ", 2.6);
                datos.setValue("Nicarágua", 2.7);
                datos.setValue("Panamá", 2.3);
                datos.setValue("Paraguai", 2.6);
                datos.setValue("Peru", 2.5);
                datos.setValue("República Dominicana", 2.3);
                datos.setValue("Uruguai", 0.4);
                datos.setValue("venezuela", 2.8);
            }
            
            
            
            
            JFreeChart grafico_circular  = ChartFactory.createPieChart("Crescimento Po. Médio ", datos, true, true, false);
             ChartPanel panel = new ChartPanel(grafico_circular);
            panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension(614, 303));
            jPanel1.setLayout(new BorderLayout());
            jPanel1.add(panel, BorderLayout.NORTH);
            pack();
            panel.repaint();
            
        }

        
        
      
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        ano = jComboBox2.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        pais = jComboBox1.getSelectedItem().toString();//adicionei pais


    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
